{
    // https://github.com/thenerdery/javascript-standards

	"env": {
        "browser": true,
        "node": false
    },

    "globals": {
        "require": true,
        "define": true
    },

    "parser": "babel-eslint",

    "rules": {
      //--------- Types                   https://github.com/thenerdery/javascript-standards#types




      //--------- Variables               https://github.com/thenerdery/javascript-standards#variables

      "prefer-const": 2,                      // suggest using const declaration for variables that are never modified after declared (ECMAScript 2015 - http://eslint.org/docs/rules/prefer-const)
      "no-const-assign": 2,                   // disallow modifying variables that are declared using const (ECMAScript 2015 - http://eslint.org/docs/rules/no-const-assign)
      "no-var": 2,                            // require let or const instead of var (ECMAScript 2015 - http://eslint.org/docs/rules/no-var)
      "one-var": [2, "always"],               // require or disallow one variable declaration per function (Best Practices - http://eslint.org/docs/rules/one-var)




      //--------- Objects                 https://github.com/thenerdery/javascript-standards#objects

      "no-new-object": 2,                     // disallow the use of the Object constructor (Best Practices - http://eslint.org/docs/rules/no-new-object)
      "object-shorthand": [2, "always"],      // require method and property shorthand syntax for object literals (ECMAScript 2015 - http://eslint.org/docs/rules/object-shorthand)
      "quote-props": [2, "as-needed"],        // require quotes around object literal property names (Best Practices - http://eslint.org/docs/rules/quote-props)




      //--------- Arrays                  https://github.com/thenerdery/javascript-standards#arrays

      "no-array-constructor": 2,              // disallow use of the Array constructor (Best Practices - http://eslint.org/docs/rules/no-array-constructor)
      "array-callback-return": 2,             // disallow use of the Array constructor (ECMAScript 2015 - http://eslint.org/docs/rules/array-callback-return)




      //--------- Destructuring           https://github.com/thenerdery/javascript-standards#destructuring





      //--------- Strings                 https://github.com/thenerdery/javascript-standards#strings

      "quotes": [2, "single", null],          // specify whether backticks, double or single quotes should be used (Best Practices - http://eslint.org/docs/rules/quotes)
      "template-curly-spacing": [2, "never"], // maintain consistency around the spacing inside of template literals (ECMAScript 2015 - http://eslint.org/docs/rules/template-curly-spacing)



      //--------- Functions               https://github.com/thenerdery/javascript-standards#functions

      "no-param-reassign": [2, { "props": true }], // disallow reassignment of function parameters (ECMAScript 2015 - http://eslint.org/docs/rules/no-param-reassign)
      "max-params": [2, 5],                        // limits the number of parameters that can be used in the function declaration. (Best Practices - http://eslint.org/docs/rules/max-params)
      // prefer-rest-params
      "no-loop-func": 2,                           // disallow creation of functions within loops (ECMAScript 2015 - http://eslint.org/docs/rules/no-loop-func)
      "wrap-iife": [2, "outside"],                 // require immediate function invocation to be wrapped in parentheses (Best Practices - http://eslint.org/docs/rules/wrap-iife)




      //--------- Arrow Functions          https://github.com/thenerdery/javascript-standards#arrow-functions

      "prefer-arrow-callback": 2,                               // using arrow functions as callbacks (ECMAScript 2015 - http://eslint.org/docs/rules/prefer-arrow-callback)
      "arrow-spacing": [2, { "before": true, "after": true }],  // require space before/after arrow function's arrow (ECMAScript 2015 - http://eslint.org/docs/rules/arrow-spacing)
      "arrow-parens": [2, "as-needed"],                         // require parens in arrow function arguments (ECMAScript 2015 - http://eslint.org/docs/rules/arrow-parens)




      //--------- Classes                   https://github.com/thenerdery/javascript-standards#classes




      //--------- Modules                   https://github.com/thenerdery/javascript-standards#modules




      //--------- Iterators and Generators  https://github.com/thenerdery/javascript-standards#iterators-and-generators

      "no-iterator": 2,                            // disallow usage of __iterator__ property (ECMAScript 2015 - http://eslint.org/docs/rules/no-iterator)




      //--------- Properties                https://github.com/thenerdery/javascript-standards#properties

      "dot-notation": [2, { "allowPattern": "^[a-z]+(_[a-z]+)+$" }], // encourages use of dot notation whenever possible (Best Practices - http://eslint.org/docs/rules/dot-notation)




      //--------- Comparison                https://github.com/thenerdery/javascript-standards#comparison

      "eqeqeq": [2, "allow-null"],                 // require the use of === and !== (Best Practices - http://eslint.org/docs/rules/eqeqeq)
      "no-case-declarations": 2,                   // Use braces to create blocks in case and default (Best Practices - http://eslint.org/docs/rules/no-case-declarations)




      //--------- Blocks                    https://github.com/thenerdery/javascript-standards#blocks

      "brace-style": [1, "1tbs", { "allowSingleLine": true }], // enforce one true brace style (Best Practices - http://eslint.org/docs/rules/brace-style)




      //--------- Comments                  https://github.com/thenerdery/javascript-standards#comments





      //--------- Whitespace                https://github.com/thenerdery/javascript-standards#whitespace

      "indent": [2, 4, {"SwitchCase": 1}],          // 4-space tabs, switch statements must be indented (Best Practices - http://eslint.org/docs/rules/indent)
      "space-before-blocks": [2, { "functions": "always", "keywords": "always", "classes": "always" }], // Place 1 space before the leading brace (Best Practices - http://eslint.org/docs/rules/space-before-blocks)
      "space-infix-ops": 2,                         // Set off operators with spaces (Best Practices - http://eslint.org/docs/rules/space-infix-ops)
      "newline-per-chained-call": [2, {"ignoreChainWithDepth": 2}], // Use indentation when making long method chains (Best Practices - http://eslint.org/docs/rules/newline-per-chained-call)
      "no-whitespace-before-property": 2,           // alerts for whitespace around the dot (Best Practices - http://eslint.org/docs/rules/no-whitespace-before-property)
      "space-in-parens": [2, "never"],              // require or disallow spaces inside parentheses (Best Practices - http://eslint.org/docs/rules/space-in-parens)
      "array-bracket-spacing": [2, "never"],        // enforce spacing inside array brackets (Best Practices - http://eslint.org/docs/rules/array-bracket-spacing)
      "object-curly-spacing": [2, "always"],        // require or disallow padding inside curly braces (Best Practices - http://eslint.org/docs/rules/object-curly-spacing)
      "max-len": [2, {"code": 100, "ignoreUrls": true}], // specify the maximum length of a line in your program (Best Practices - http://eslint.org/docs/rules/max-len)



      //--------- Commas                    https://github.com/thenerdery/javascript-standards#commas

      "comma-style": [2, "last"],             // enforce one true comma style (Best Practices - http://eslint.org/docs/rules/comma-style)
      "comma-dangle": [2, "only-multiline"],  // disallow or enforce trailing commas (Best Practices - http://eslint.org/docs/rules/comma-dangle)



      //--------- Semicolons                https://github.com/thenerdery/javascript-standards#semicolons

      "semi": [2, "always"],                   // require semicolons (Best Practices - http://eslint.org/docs/rules/semi)




      //--------- Naming Conventions        https://github.com/thenerdery/javascript-standards#naming-conventions

      "camelcase": [2, {"properties": "always"}], // require camel case names (Best Practices - http://eslint.org/docs/rules/camelcase)
      "new-cap": 2,                               // Use PascalCase when naming constructors or classes (Best Practices - http://eslint.org/docs/rules/new-cap)
      "no-underscore-dangle": 2                  // eliminate the use of dangling underscores in identifiers (Best Practices - http://eslint.org/docs/rules/no-underscore-dangle)




    }
}
